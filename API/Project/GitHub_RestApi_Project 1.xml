<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="8827b0aa-8f7a-47dd-8c80-91b71972d6ad" created="3.53.0" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="GitHub_RestApi_Project 1" projectVersion="" updated="3.53.0 2024-05-13T12:06:25Z" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="c1bec8ed-10df-4d50-bef8-f084197b865e" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://api.github.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings id="986b40e7-a926-4a22-bfc1-8b75b7a2c001"/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://api.github.com</con:endpoint></con:endpoints><con:resource name="Emails" path="/user/emails" id="2f7fcacc-db22-471b-963d-15f736f042fe"><con:settings/><con:parameters/><con:method name="Emails" id="8606f0d6-eba4-4e99-800c-d3d7d304dec0" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="5afeb57c-8ac5-4989-92f8-b6c766736e55" mediaType="application/json"><con:settings/><con:endpoint>https://api.github.com</con:endpoint><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:parameters/></con:request></con:method></con:resource><con:resource name="Keys" path="/user/keys" id="92ace797-0d9f-4b10-bcc6-22ae426548b7"><con:settings/><con:parameters/><con:method name="Keys" id="d30a6b02-d96b-4a67-99bc-53852993b25e" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>422</con:status><con:params/><con:element xmlns:keys="https://api.github.com/user/keys">keys:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:keys="https://api.github.com/user/keys">keys:Response</con:element></con:representation><con:request name="Request 1" id="cd9f03bd-76ce-4b3c-9760-bb23e90ae22b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="KeyId" path="/user/keys/{keyId}" id="df5b3eb9-5241-431d-bb55-cae899dc76dc"><con:settings/><con:parameters><con:parameter><con:name>keyId</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="KeyId" id="df317966-6ca8-464a-9d86-aadb64ec2700" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:ns="https://api.github.com/user/keys/103114036">ns:Fault</con:element></con:representation><con:request name="Request 1" id="d87eb29b-be5a-4064-bd1e-2b6d22a893fd" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>https://api.github.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>keyId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="cfcf27b3-f151-4c1f-aa23-01c1ff64dd13" name="https://api.github.com Test Suite"><con:settings id="e5090675-caeb-4e48-abbe-6bdcd5c652fb"><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase id="923310b8-931b-4581-b5f5-a2d03cd238fd" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Test Case" searchProperties="true" timeout="0"><con:settings><con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Users\SULBHAPAWDE\FullStack\fst-ReadyAPI_AllProjects\Reports</con:setting><con:setting id="GeneratableJUnitReport@Modify">false</con:setting><con:setting id="FlowLayout">true</con:setting></con:settings><con:testStep type="manualTestStep" name="Generate_PAT_To_Authenticate_GitHub_API_ManualStep" id="3e486e93-2711-41d2-965f-5db45a4002ba"><con:description>Generate New Personal Access Token Classic 
Steps - 
1. Login to github account 
2. Navigate to devloper settings - Profile / settings / developer settings 
3. Select Personal access tokens - Tokens (Classic) - Generate New Token - Generate New Token Classic 
https://github.com/settings/tokens/new
4. Add note, expiration, select scopes &amp; click Generate Token
user:email - Access user email addresses (read-only) 
write:public_key  - Write user public keys 
read:public_key - Read user public keys
Copy the access token to use as ordinary OAuth access tokens to authenticate to the API over Basic Authentication. 

Scopes define the access for personal tokens

Note - While sending request to githup api , create OAUTH 2.0 profile ( MyAuthProfile) using this PAT and use that to authentic git hub apis 
</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Access Token Generated - Example - ghp_xxxxfO5xxxx13o0xxxxpsf9qyY3EqOCxxxx</con:expectedResult></con:config></con:testStep><con:testStep type="manualTestStep" name="Generate SSH Public &amp; Private Keys" id="7668165e-df03-4463-a499-f9ed66535877"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="TC001_Verify_ResponseCode_200_With_GetUserEmails_Request" id="243b1357-2f96-4933-a245-d3deccd3b087"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/emails" methodName="Emails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="TC001_Verify_ResponseCode_200_With_GetUserEmails_Request" id="5afeb57c-8ac5-4989-92f8-b6c766736e55" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request/><con:originalUri>https://api.github.com/user/emails</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="51dfce84-858d-44ee-8628-a8a5d5f78124" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>MyAuthProfile</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="TC002_Verify_ResponseCode_200_With_PostUserkeys_Request" id="c2eec8c7-a521-4871-80f9-1378c84038c8"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/keys" methodName="Keys" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="TC002_Verify_ResponseCode_200_With_PostUserkeys_Request" id="cd9f03bd-76ce-4b3c-9760-bb23e90ae22b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request>{
	"title":"TestKey",
	"key": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICQLWlQwX/G48UmAyUfz2UMgtwCNwik8x+Kp95J7OKn0"
}
</con:request><con:originalUri>https://api.github.com/user/keys</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="6684d7da-7956-4a49-a4ba-4626cad1a88d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>My Profile</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_id_from_response_from_previoustestcase" id="7506903e-4634-44b3-91f5-e3d070a20968"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>sshkeyId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>TC002_Verify_ResponseCode_200_With_PostUserkeys_Request</con:sourceStep><con:sourcePath>$['id']</con:sourcePath><con:targetType>keyId</con:targetType><con:targetStep>Request 3</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Request 3" id="b7ca21ef-bd0f-43fd-90d5-ce2f9d672d16"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/keys/{keyId}" methodName="KeyId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 3" id="d87eb29b-be5a-4064-bd1e-2b6d22a893fd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request/><con:originalUri>https://api.github.com/user/keys/103114036</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2c1af575-75a9-4659-9c24-a387deadfb93" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>MyAuthProfile</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="keyId" value="103115590"/></con:parameters><con:parameterOrder><con:entry>keyId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer><con:oAuth2Profile><con:name>test</con:name><con:type>OAuth 2.0</con:type><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth2Profile><con:oAuth2Profile><con:name>MyAuthProfile</con:name><con:type>OAuth 2.0</con:type><con:accessToken>ghp_xxxxfO5xxxx13o0xxxxpsf9qyY3EqOCxxxx</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth2Profile><con:oAuth2Profile><con:name>My Profile</con:name><con:type>OAuth 2.0</con:type><con:accessToken>ghp_xxxxfO5xxxx13o0xxxxpsf9qyY3EqOCxxxx</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth2Profile></con:oAuth2ProfileContainer><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository><con:oAuth20AuthEntry><con:name>test</con:name><con:type>OAuth 2.0</con:type><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth20AuthEntry><con:oAuth20AuthEntry><con:name>MyAuthProfile</con:name><con:type>OAuth 2.0</con:type><con:accessToken>ghp_xxxxfO5xxxx13o0xxxxpsf9qyY3EqOCxxxx</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth20AuthEntry><con:oAuth20AuthEntry><con:name>My Profile</con:name><con:type>OAuth 2.0</con:type><con:accessToken>ghp_xxxxfO5xxxx13o0xxxxpsf9qyY3EqOCxxxx</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth20AuthEntry></con:authRepository><con:tags/></con:soapui-project>